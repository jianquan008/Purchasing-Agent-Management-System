name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Lint backend code
      run: |
        cd backend
        npm run lint || true
    
    - name: Lint frontend code
      run: |
        cd frontend
        npm run lint || true
    
    - name: Build backend
      run: |
        cd backend
        npm run build
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Run backend tests
      run: |
        cd backend
        npm test || true
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret
        DB_PATH: :memory:
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test || true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Run security audit
      run: |
        cd backend && npm audit --audit-level moderate || true
        cd ../frontend && npm audit --audit-level moderate || true

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend Docker image
      run: |
        docker build -t daigou-backend:latest ./backend
    
    - name: Build frontend Docker image
      run: |
        docker build -t daigou-frontend:latest ./frontend